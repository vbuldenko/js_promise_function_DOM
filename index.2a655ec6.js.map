{"mappings":"ACEA,SAAS,EAAQ,CAAO,CAAE,CAAS,EACjC,OAAO,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7B,EACE,EAAQ,gBAAgB,CAAC,EAAW,WAClC,OAAA,EACG,UAAsC,MAAA,CAA7B,EAAU,qBAA4C,MAAA,CAAzB,EAAQ,QAAQ,CAAC,UAAmB,MAAA,CAAX,EAAQ,EAAE,CAAC,K,EAGjF,EACF,CAEA,IAAM,EAAe,SAAC,CAAtB,EACE,IAAM,EAAM,SAAS,aAAa,CAAC,MAEnC,CAAA,EAAI,SAAS,CAAG,UAChB,EAAI,WAAW,CAAG,EAClB,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,EAEM,EAAa,SAAS,cAAc,CAAC,SACrC,EAAgB,SAAS,cAAc,CAAC,YACxC,EAAS,SAAS,cAAc,CAAC,UAEvC,EAAQ,EAAY,SAAS,IAAI,CAAC,GAClC,EAAQ,EAAe,SAAS,IAAI,CAAC,GACrC,EAAQ,EAAQ,SAAS,IAAI,CAAC,GAE9B,EAAQ,EAAY,SAAS,IAAI,CAAC,GAClC,EAAQ,EAAe,SAAS,IAAI,CAAC,GAErC,EAAQ,EAAY,QAAQ,IAAI,CAAC,GACjC,EAAQ,EAAe,QAAQ,IAAI,CAAC,GACpC,EAAQ,EAAQ,QAAQ,IAAI,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction waitFor(element, eventName) {\n    return new Promise(function(resolve, reject) {\n        element.addEventListener(eventName, function() {\n            return resolve(\"It was \".concat(eventName, \" on the element: \").concat(element.nodeName, \", id: \").concat(element.id, \".\"));\n        });\n    });\n}\nvar printMessage = function(message) {\n    var div = document.createElement(\"div\");\n    div.className = \"message\";\n    div.textContent = message;\n    document.body.appendChild(div);\n};\nvar loginField = document.getElementById(\"login\");\nvar passwordField = document.getElementById(\"password\");\nvar button = document.getElementById(\"submit\");\nwaitFor(loginField, \"click\").then(printMessage);\nwaitFor(passwordField, \"click\").then(printMessage);\nwaitFor(button, \"click\").then(printMessage);\nwaitFor(loginField, \"input\").then(printMessage);\nwaitFor(passwordField, \"input\").then(printMessage);\nwaitFor(loginField, \"blur\").then(printMessage);\nwaitFor(passwordField, \"blur\").then(printMessage);\nwaitFor(button, \"blur\").then(printMessage);\n\n//# sourceMappingURL=index.2a655ec6.js.map\n","'use strict';\r\n\r\nfunction waitFor(element, eventName) {\r\n  return new Promise((resolve, reject) => {\r\n    element.addEventListener(eventName, () =>\r\n      resolve(\r\n        `It was ${eventName} on the element: ${element.nodeName}, id: ${element.id}.`,\r\n      ),\r\n    );\r\n  });\r\n}\r\n\r\nconst printMessage = (message) => {\r\n  const div = document.createElement('div');\r\n\r\n  div.className = 'message';\r\n  div.textContent = message;\r\n  document.body.appendChild(div);\r\n};\r\n\r\nconst loginField = document.getElementById('login');\r\nconst passwordField = document.getElementById('password');\r\nconst button = document.getElementById('submit');\r\n\r\nwaitFor(loginField, 'click').then(printMessage);\r\nwaitFor(passwordField, 'click').then(printMessage);\r\nwaitFor(button, 'click').then(printMessage);\r\n\r\nwaitFor(loginField, 'input').then(printMessage);\r\nwaitFor(passwordField, 'input').then(printMessage);\r\n\r\nwaitFor(loginField, 'blur').then(printMessage);\r\nwaitFor(passwordField, 'blur').then(printMessage);\r\nwaitFor(button, 'blur').then(printMessage);\r\n"],"names":["waitFor","element","eventName","Promise","resolve","reject","addEventListener","concat","nodeName","id","printMessage","message","div","document","createElement","className","textContent","body","appendChild","loginField","getElementById","passwordField","button","then"],"version":3,"file":"index.2a655ec6.js.map"}